{"version":3,"sources":["Components/LoadingScreen.tsx","App.tsx","index.tsx"],"names":["Loading","loadingBar","useRef","loadingScreen","useEffect","timeLine","gsap","timeline","to","current","width","duration","ease","opacity","display","ref","className","Content","React","lazy","App","fallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNA+BeA,MA5Bf,WACE,IAAMC,EAAaC,iBAAO,MACpBC,EAAgBD,iBAAO,MAiB7B,OAfAE,qBAAU,WACR,IAAMC,EAAWC,IAAKC,WACtBF,EAASG,GAAGP,EAAWQ,QAAS,CAC9BC,MAAO,OACPC,SAAU,EACVC,KAAM,gBAERP,EAASG,GAAGP,EAAWQ,QAAS,CAAEI,QAAS,IAAKF,SAAU,KAC1DN,EAASG,GAAGL,EAAcM,QAAS,CACjCI,QAAS,EACTC,QAAS,OACTH,SAAU,QAKZ,yBAASI,IAAKZ,EAAea,UAAU,kBAAvC,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAMD,IAAKd,SCtB5BgB,EAAUC,IAAMC,MAAK,kBAAM,sDAalBC,MAXf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,cAACJ,EAAD,UCLRK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.45a0b39f.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\n\nfunction Loading() {\n  const loadingBar = useRef(null);\n  const loadingScreen = useRef(null);\n\n  useEffect(() => {\n    const timeLine = gsap.timeline();\n    timeLine.to(loadingBar.current, {\n      width: \"100%\",\n      duration: 3,\n      ease: \"expo. inOut\",\n    });\n    timeLine.to(loadingBar.current, { opacity: \"0\", duration: 0.2 });\n    timeLine.to(loadingScreen.current, {\n      opacity: 0,\n      display: \"none\",\n      duration: 0.5,\n    });\n  });\n\n  return (\n    <section ref={loadingScreen} className=\"loading_section\">\n      <div className=\"loading_wrapper\">\n        <div className=\"bar\" ref={loadingBar}></div>\n      </div>\n    </section>\n  );\n}\n\nexport default Loading;\n","import React, { Suspense } from \"react\";\nimport \"./Styles/style.css\";\nimport Loading from \"./Components/LoadingScreen\";\nconst Content = React.lazy(() => import(\"./Components/Content\"));\n\nfunction App() {\n  return (\n    <>\n      <Loading />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Content />\n      </Suspense>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}